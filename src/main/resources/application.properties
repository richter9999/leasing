## -------------------------------- 服务器配置信息 --------------------------------

# Session 超时时间
# server.servlet.session.timeout = 9000        
# 浏览器脚本无法访问 Cookie
server.servlet.session.cookie.http-only = true
# 仅通过 HTTPS 连接发送 Cookie  
server.servlet.session.cookie.secure = true
# Tomcat 编码
server.tomcat.uri-encoding = UTF-8
# 最大工作线程 默认200 (4核8g内存，线程数800，一般是核数*200。操作系统做线程之间的切换调度是有系统开销的，所以不是越多越好)
server.tomcat.threads.max = 1600
# 最小工作空闲线程数 默认 10 (适当增大一些，以便应对突然增长的访问量)
server.tomcat.threads.min-spare = 400
# 最大连接数 默认为10000
server.tomcat.max-connections = 20000
# 连接超时
server.tomcat.connection-timeout = 50000
# HTTP 编码
server.servlet.encoding.charset = UTF-8
server.servlet.encoding.enabled = true
server.servlet.encoding.force = true

## -------------------------------- Log 日志配置信息 --------------------------------
logging.file.name = ./logs/logger.log
logging.level.root = info

## -------------------------------- Redis 配置信息 --------------------------------
spring.redis.cluster.nodes = 127.0.0.1:6380,127.0.0.1:6381,127.0.0.1:6382,127.0.0.1:6383,127.0.0.1:6384,127.0.0.1:6385
spring.redis.database = 0
spring.redis.password = 
spring.redis.timeout = 6000ms
# 连接池最大连接数 (使用负值表示没有限制)
spring.redis.lettuce.pool.max-active = 1000
# 连接池最大阻塞等待时间 (使用负值表示没有限制)
spring.redis.lettuce.pool.max-wait = 1
# 连接池中的最大空闲连接
spring.redis.lettuce.pool.max-idle = 10
# 连接池中的最小空闲连接
spring.redis.lettuce.pool.min-idle = 5


## -------------------------------- RabbitMQ 配置信息 --------------------------------
spring.rabbitmq.host = 127.0.0.1
spring.rabbitmq.port = 5672
spring.rabbitmq.username = guest
spring.rabbitmq.password = guest
# 开启重试
spring.rabbitmq.template.retry.enabled = true
# 重试时间间隔
spring.rabbitmq.template.retry.initial-interval = 1000
spring.rabbitmq.template.retry.max-interval = 3000
# 重试次数
spring.rabbitmq.template.retry.max-attempts = 5
# 在需要使用消息的return机制时候，此参数必须设置为true
spring.rabbitmq.template.mandatory = true
# 开启消息的confirm机制
spring.rabbitmq.publisher-confirm-type = correlated

spring.rabbitmq.listener.simple.retry.enabled = true
spring.rabbitmq.listener.simple.retry.initial-interval = 3000
spring.rabbitmq.listener.simple.retry.max-attempts = 5

# 是否创建 RabbitAdmin
spring.rabbitmq.dynamic = true


## -------------------------------- jackson 配置信息 --------------------------------
spring.jackson.date-format = yyyy-MM-dd HH:mm:ss
# 时区必须要设置
spring.jackson.time-zone= GMT+8
# ALWAYS的意思是即时属性为null，仍然也会输出这个key
spring.jackson.default-property-inclusion = ALWAYS


## -------------------------------- 文件系统上传 配置信息 --------------------------------
# minio.url = http://127.0.0.1:9000
# minio.access-key = minioadmin
# minio.secret-key = minioadmin
# minio.bucket-name = myFile

## -------------------------------- 数据库 配置信息 --------------------------------
# 主数据源 primary 用于 写入
spring.datasource.master.jdbc-url = jdbc:mysql://127.0.0.1:7001/NHR?serverTimezone=UTC
spring.datasource.master.username = root
spring.datasource.master.password = yhzt
spring.datasource.master.driver-class-name = com.mysql.cj.jdbc.Driver

# Slave 数据源 主 用于 读取
spring.datasource.slave.jdbc-url = jdbc:mysql://127.0.0.1:7002/NHR?serverTimezone=UTC
spring.datasource.slave.username = root
spring.datasource.slave.password = yhzt
spring.datasource.slave.driver-class-name = com.mysql.cj.jdbc.Driver